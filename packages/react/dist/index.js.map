{"version":3,"sources":["../src/index.tsx","../src/use-dropzone/index.tsx","../src/use-dropzone/utils.ts"],"sourcesContent":["import \"./styles.css\";\nimport { type ReactNode, useContext, useEffect, useState, createContext, useCallback, ReactElement, PropsWithChildren, useMemo, useRef } from 'react'\nimport type { FileRouter, inferEndpointInput } from 'uploadthing/server'\nimport { generateReactHelpers } from '@uploadthing/react/hooks'\nimport type { UploadthingComponentProps } from '@uploadthing/react/src/types'\nimport { DropzoneOptions, FileWithPath, useDropzone } from './use-dropzone'\nimport { allowedContentTextLabelGenerator, generateClientDropzoneAccept, generatePermittedFileTypes, type UploadFileResponse } from \"uploadthing/client\";\nimport { twMerge } from 'tailwind-merge'\n\nexport type UploadRootProps<TRouter extends FileRouter> = UploadthingComponentProps<TRouter> & {\n    children: JSX.Element | JSX.Element[]\n}\n\nexport type UploadTriggerProps<TRouter extends FileRouter> = {\n\n}\n\nfunction getFilesFromClipboardEvent(event: ClipboardEvent) {\n    const dataTransferItems = event.clipboardData?.items;\n    if (!dataTransferItems) return;\n\n    const files = Array.from(dataTransferItems).reduce<File[]>((acc, curr) => {\n        const f = curr.getAsFile();\n        return f ? [...acc, f] : acc;\n    }, []);\n\n    return files;\n}\n\nexport const generateConstruct = <TRouter extends FileRouter>() => {\n    const {\n        useUploadThing\n    } = generateReactHelpers<TRouter>()\n\n    type RootContextType<TRouter extends FileRouter> = {\n        endpoint: UploadthingComponentProps<TRouter>['endpoint'];\n        files: File[];\n        setFiles: (files: File[]) => void;\n        startUpload: (files: File[], input: undefined | any) => Promise<UploadFileResponse[] | undefined>;\n        isUploading: boolean;\n        setDropzoneHelpers: (helpers: ReturnType<typeof useDropzone>) => void;\n        dropzoneHelpers?: ReturnType<typeof useDropzone>;\n        input: inferEndpointInput<TRouter[keyof TRouter]> | undefined;\n        fileTypes: string[];\n        multiple: boolean;\n        isReady: boolean;\n        allowedContentTextLabel: string;\n    }\n\n    type FinalContextType = RootContextType<TRouter>\n\n    const RootContext = createContext<FinalContextType>(\n        {} as FinalContextType\n    );\n\n    RootContext.displayName = 'UtConstructContext';\n\n    const DropzoneRoot = ({\n        children,\n        render,\n        className,\n        appearance\n    }: {\n        children?: ReactNode | ReactNode[];\n        render?: (opts: FinalContextType & {\n            getDefaultClasses: () => string,\n            getRootProps: ReturnType<typeof useDropzone>['getRootProps']\n        }) => ReactNode;\n        className?: string;\n        appearance?: {\n            noBtn?: boolean;\n        }\n    }) => {\n        const context = useContext(RootContext)\n        const {\n            setDropzoneHelpers,\n            setFiles,\n            fileTypes,\n            isReady,\n            allowedContentTextLabel,\n            files\n        } = context;\n\n        const defaultOnDrop = useCallback(\n            (acceptedFiles: FileWithPath[]) => {\n                setFiles(acceptedFiles)\n            },\n            [setFiles]\n        )\n\n        const accept = useMemo(\n            () => fileTypes ? generateClientDropzoneAccept(fileTypes) : undefined,\n            // shitty code? maybe. It works? yes. Am I proud of myself? Hell yeah\n            // It is so that I don't need to bother with reference to array but compare actual values\n            [fileTypes.join(';')]\n        )\n        const dropzoneProps = useMemo(\n            (): DropzoneOptions => {\n                return {\n                    onDrop: defaultOnDrop,\n                    accept\n                };\n            },\n            [defaultOnDrop, accept]\n        )\n        const dropzone = useDropzone(dropzoneProps)\n\n        useEffect(\n            () => {\n                setDropzoneHelpers(dropzone)\n            },\n            [dropzone]\n        )\n\n        const getDefaultClasses = () => {\n            const defaultClasses = \"mt-2 flex flex-col items-center justify-center rounded-lg border border-dashed border-gray-900/25 px-6 py-10 text-center hover:bg-gray-100 transition-colors\";\n\n            return defaultClasses;\n        }\n\n        if (render) return render({\n            ...context,\n            getDefaultClasses,\n            getRootProps: dropzone.getRootProps\n        });\n\n        if (children) {\n            return (\n                <div\n                    {...dropzone.getRootProps()}\n                    className={\n                        twMerge(\n                            getDefaultClasses(),\n                            className\n                        )\n                    }\n                >\n                    {children}\n                </div>\n            );\n        }\n\n        return (\n            <div\n                {...dropzone.getRootProps()}\n                className={\n                    twMerge(\n                        getDefaultClasses(),\n                        className\n                    )\n                }\n            >\n                <DropzoneInput />\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 20 20\"\n                    className=\"mx-auto block h-12 w-12 align-middle text-gray-400\"\n                >\n                    <path\n                        fill=\"currentColor\"\n                        fillRule=\"evenodd\"\n                        d=\"M5.5 17a4.5 4.5 0 0 1-1.44-8.765a4.5 4.5 0 0 1 8.302-3.046a3.5 3.5 0 0 1 4.504 4.272A4 4 0 0 1 15 17H5.5Zm3.75-2.75a.75.75 0 0 0 1.5 0V9.66l1.95 2.1a.75.75 0 1 0 1.1-1.02l-3.25-3.5a.75.75 0 0 0-1.1 0l-3.25 3.5a.75.75 0 1 0 1.1 1.02l1.95-2.1v4.59Z\"\n                        clipRule=\"evenodd\"\n                    ></path>\n                </svg>\n                {\n                    isReady\n                        ? 'Choose files or drag and drop'\n                        : 'Loading...'\n                }\n                <div\n                    className=\"m-0 min-h-[1.25rem] text-xs leading-5 text-gray-600\"\n                >\n                    {allowedContentTextLabel}\n                </div>\n                {\n                    appearance?.noBtn\n                        ? null\n                        : files.length > 0\n                            ? (\n                                <UploadTrigger />\n                            )\n                            : null\n                }\n            </div>\n        );\n    }\n\n    const DropzoneInput = () => {\n        const {\n            dropzoneHelpers\n        } = useContext(RootContext)\n\n        return (\n            <input className=\"sr-only\" {...dropzoneHelpers?.getInputProps()} />\n        );\n    }\n\n    const UploadTrigger = ({\n        render,\n        children,\n        className\n    }: {\n        render?: (opts: FinalContextType & {\n            onClick: () => void;\n            getDefaultButtonText: () => string;\n            getDefaultClasses: () => string;\n        }) => ReactNode;\n        children?: ReactNode;\n        className?: string\n    }) => {\n        const context = useContext(RootContext)\n        const {\n            startUpload,\n            input,\n            files,\n            isUploading,\n            multiple,\n            isReady\n        } = context;\n\n        const defaultOnClick = useCallback(\n            () => {\n                if (!files.length) return;\n\n                return startUpload(files, input)\n            },\n            [startUpload, files, input]\n        )\n\n        const getDefaultButtonText = () => {\n            if (files.length) return `Upload ${files.length} file${files.length === 1 ? \"\" : \"s\"}`\n            if (!isReady) return \"Loading...\"\n            if (isUploading) return \"Uploading\"\n\n            return `Choose File${multiple ? `(s)` : ``}`\n        }\n\n        const getDefaultClasses = () => {\n            const defaultClasses = \"relative mt-4 flex h-10 w-36 items-center justify-center overflow-hidden rounded-md text-white after:transition-[width] after:duration-500 bg-blue-600 border-none cursor-pointer hover:bg-blue-500 transition-colors\";\n\n            if (!isReady) {\n                return twMerge(\n                    defaultClasses,\n                    \"bg-blue-400 cursor-not-allowed\"\n                )\n            }\n\n            return defaultClasses;\n        }\n\n        if (render) return render({\n            ...context,\n            onClick: defaultOnClick,\n            getDefaultButtonText,\n            getDefaultClasses\n        });\n\n        if (children) return (\n            <button>\n                {children}\n            </button>\n        );\n\n        return (\n            <button\n                className={\n                    twMerge(\n                        getDefaultClasses(),\n                        className\n                    )\n                }\n                onClick={defaultOnClick}\n            >\n                {getDefaultButtonText()}\n            </button>\n        );\n    }\n\n    const FilePreviewCard = ({ file }: {\n        file: File\n    }) => {\n        const {\n            files,\n            setFiles\n        } = useContext(RootContext)\n        const [isHovered, setIsHovered] = useState(false)\n\n        const onMouseEnter = () => {\n            setIsHovered(true)\n        }\n\n        const onMouseLeave = () => {\n            setIsHovered(false)\n        }\n\n        const defaultOnClick = () => {\n            setFiles(\n                files.filter(\n                    (f) => f !== file \n                )\n            )\n        }\n\n        const getDefaultClasses = () => {\n            const defaultClasses = \"relative border border-gray-300 rounded cursor-pointer after:content-[''] after:absolute after:w-full after:h-full after:top-0 after:left-0 after:transition-colors\"\n\n            if (isHovered) {\n                return twMerge(\n                    defaultClasses,\n                    \"after:bg-gray-400/25\"\n                )\n            }\n\n            return defaultClasses;\n        }\n\n        const closeIcon = <svg fill=\"#000000\" height=\"36px\" width=\"36\" version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 512 512\" className=\"\">\n            <g>\n                <g>\n                    <polygon points=\"512,59.076 452.922,0 256,196.922 59.076,0 0,59.076 196.922,256 0,452.922 59.076,512 256,315.076 452.922,512 \n               512,452.922 315.076,256 \t\t\"/>\n                </g>\n            </g>\n        </svg>\n\n        const renderCloseIcon = () => {\n            return (\n                <div\n                    className={\n                        twMerge(\n                            \"opacity-0 transition-opacity absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 backdrop-blur w-full h-full flex justify-center items-center\",\n                            isHovered ? \"opacity-100\" : null\n                        )\n                    }\n                >\n                    {closeIcon}\n                </div>\n            );\n        }\n\n        const isImage = file.type.includes('image')\n\n        if (isImage) {\n            return (\n                <div\n                    className={getDefaultClasses()}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    onClick={defaultOnClick}\n                >\n                    {renderCloseIcon()}\n                    <img\n                        className=\"w-[80px]\"\n                        src={URL.createObjectURL(file)}\n                        alt={`preview of ${file.name}`}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div\n                className={\n                    twMerge(\n                        getDefaultClasses(),\n                        \"min-w-[80px] min-h-[80px] p-3\"\n                    )\n                }\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onClick={defaultOnClick}\n            >\n                {renderCloseIcon()}\n                {file.name}\n            </div>\n        );\n    }\n\n    const FileGallery = ({\n        render\n    }: {\n        render?: (opts: FinalContextType & {\n            getDefaultClasses: () => string;\n            renderFile: (file: File) => ReactNode;\n        }) => ReactNode;\n    }) => {\n        const context = useContext(RootContext)\n        const {\n            files\n        } = context;\n\n        if (!files.length) return null;\n\n        const getDefaultClasses = () => {\n            const defaultClasses = \"mt-4 flex flex-row gap-x-4\"\n\n            return defaultClasses;\n        }\n\n        const renderFile = (file: File) => {\n            return <FilePreviewCard file={file} />\n        }\n\n        if (render) return render({\n            ...context,\n            getDefaultClasses,\n            renderFile\n        })\n\n        return (\n            <div\n                className={getDefaultClasses()}\n            >\n                {files.map(renderFile)}\n            </div>\n        );\n    }\n\n    const Textarea = (props: React.TextareaHTMLAttributes<any>) => {\n        const elemRef = useRef<HTMLTextAreaElement>(null)\n        const {\n            files,\n            setFiles\n        } = useContext(RootContext)\n\n        useEffect(\n            () => {\n                const handlePaste = (event: ClipboardEvent) => {\n                    event.preventDefault()\n                    event.stopPropagation()\n\n                    if (document.activeElement !== elemRef.current) {\n                        // Upload from clipboard can be triggered only if button is focused\n                        return;\n                    }\n\n                    const pastedFiles = getFilesFromClipboardEvent(event)\n\n                    if (!pastedFiles) return;\n\n                    setFiles([...files, ...pastedFiles]);\n                }\n\n                window.addEventListener(\"paste\", handlePaste);\n\n                return () => {\n                    window.removeEventListener(\"paste\", handlePaste);\n                };\n            }\n        )\n\n        const getDefaultClasses = () => {\n            const defaultClasses = \"block p-2.5 w-full text-base text-gray-900 border rounded\"\n\n            return defaultClasses;\n        }\n\n        return (\n            <textarea\n                placeholder=\"Write your text here\"\n                {...props}\n                ref={elemRef}\n                className={\n                    twMerge(\n                        getDefaultClasses(),\n                        props.className\n                    )\n                }\n            />\n        );\n    }\n\n    const UploadRoot = (\n        props: FileRouter extends TRouter\n            ? \"Where's the generic lebowski\"\n            : UploadRootProps<TRouter>\n    ) => {\n        const $props = props as unknown as UploadRootProps<TRouter>;\n        const {\n            endpoint,\n            onClientUploadComplete,\n            onUploadBegin,\n            onUploadError,\n            onUploadProgress,\n            children,\n        } = $props;\n        const input = \"input\" in $props ? $props.input : undefined;\n        const [droppedFiles, setDroppedFiles] = useState<File[]>([])\n        const [dropzoneHelpers, setDropzoneHelpers] = useState<ReturnType<typeof useDropzone>>()\n        const {\n            isUploading,\n            startUpload,\n            permittedFileInfo\n        } = useUploadThing(\n            endpoint\n        )\n\n        const {\n            fileTypes,\n            multiple\n        } = generatePermittedFileTypes(\n            permittedFileInfo?.config\n        )\n        const allowedContentTextLabel = allowedContentTextLabelGenerator(permittedFileInfo?.config)\n\n        const isReady = fileTypes.length > 0;\n\n        type InferredInput = inferEndpointInput<TRouter[typeof endpoint]>;\n        type FuncInput = undefined extends InferredInput\n            ? [files: File[], input?: undefined]\n            : [files: File[], input: InferredInput];\n\n        return (\n            <RootContext.Provider value={{\n                endpoint: $props.endpoint as RootContextType<TRouter>['endpoint'],\n                files: droppedFiles,\n                setFiles: setDroppedFiles,\n                startUpload: startUpload as (...args: FuncInput) => Promise<UploadFileResponse[] | undefined>,\n                isUploading,\n                setDropzoneHelpers,\n                dropzoneHelpers,\n                input,\n                fileTypes,\n                multiple,\n                isReady,\n                allowedContentTextLabel\n            }}>\n                {children}\n            </RootContext.Provider>\n        );\n    }\n\n    return {\n        UploadRoot,\n        UploadTrigger,\n        DropzoneRoot,\n        DropzoneInput,\n        RootContext,\n        Textarea,\n        FileGallery\n    };\n}\n","/**\n * This is a forked version of the react-dropzone package.\n * See original source here: https://github.com/react-dropzone/react-dropzone\n * The original package is licensed under the MIT license.\n */\n\nimport type React from \"react\";\nimport {\n  createRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n} from \"react\";\nimport { fromEvent } from \"file-selector\";\n\nimport type {\n  DropEvent,\n  DropzoneMethods,\n  DropzoneOptions,\n  DropzoneState,\n  FileError,\n  FileRejection,\n} from \"./types\";\nimport {\n  acceptPropAsAcceptAttr,\n  allFilesAccepted,\n  canUseFileSystemAccessAPI,\n  composeEventHandlers,\n  ErrorCode,\n  fileAccepted,\n  fileMatchSize,\n  isAbort,\n  isEvtWithFiles,\n  isIeOrEdge,\n  isPropagationStopped,\n  isSecurityError,\n  onDocumentDragOver,\n  pickerOptionsFromAccept,\n} from \"./utils\";\n\nexport * from \"./types\";\n\nconst initialState: DropzoneState = {\n  isFocused: false,\n  isFileDialogActive: false,\n  isDragActive: false,\n  isDragAccept: false,\n  isDragReject: false,\n  acceptedFiles: [],\n  fileRejections: [],\n  rootRef: createRef<HTMLElement>(),\n  inputRef: createRef<HTMLInputElement>(),\n};\n\n/**\n * A React hook that creates a drag 'n' drop area.\n *\n * ### Example\n *\n * ```tsx\n * function MyDropzone() {\n *   const { getRootProps, getInputProps } = useDropzone({\n *     onDrop: acceptedFiles => {\n *       // do something with the File objects, e.g. upload to some server\n *     }\n *   });\n *\n *   return (\n *     <div {...getRootProps()}>\n *       <input {...getInputProps()} />\n *       <p>Drag and drop some files here, or click to select files</p>\n *     </div>\n *   )\n * }\n * ```\n */\nexport function useDropzone(\n  props: DropzoneOptions,\n): DropzoneState & DropzoneMethods {\n  const {\n    accept,\n    disabled = false,\n    getFilesFromEvent = fromEvent,\n    maxSize = Number.POSITIVE_INFINITY,\n    minSize = 0,\n    multiple = true,\n    maxFiles = 0,\n    onDragEnter,\n    onDragLeave,\n    onDragOver,\n    onDrop,\n    onDropAccepted,\n    onDropRejected,\n    onFileDialogCancel,\n    onFileDialogOpen,\n    useFsAccessApi,\n    autoFocus,\n    preventDropOnDocument = true,\n    noClick = false,\n    noKeyboard = false,\n    noDrag = false,\n    noDragEventsBubbling = false,\n    onError,\n    validator = null,\n  } = props;\n\n  const acceptAttr = useMemo(() => acceptPropAsAcceptAttr(accept), [accept]);\n  const pickerTypes = useMemo(() => pickerOptionsFromAccept(accept), [accept]);\n\n  const onFileDialogOpenCb = useMemo(\n    () => (typeof onFileDialogOpen === \"function\" ? onFileDialogOpen : noop),\n    [onFileDialogOpen],\n  );\n  const onFileDialogCancelCb = useMemo(\n    () =>\n      typeof onFileDialogCancel === \"function\" ? onFileDialogCancel : noop,\n    [onFileDialogCancel],\n  );\n\n  const rootRef = useRef<HTMLElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { isFocused, isFileDialogActive } = state;\n\n  const fsAccessApiWorksRef = useRef(\n    typeof window !== \"undefined\" &&\n    window.isSecureContext &&\n    useFsAccessApi &&\n    canUseFileSystemAccessAPI(),\n  );\n\n  // Update file dialog active state when the window is focused on\n  const onWindowFocus = () => {\n    // Execute the timeout only if the file dialog is opened in the browser\n    if (!fsAccessApiWorksRef.current && isFileDialogActive) {\n      setTimeout(() => {\n        if (inputRef.current) {\n          const { files } = inputRef.current;\n\n          if (!files?.length) {\n            dispatch({ type: \"closeDialog\" });\n            onFileDialogCancelCb();\n          }\n        }\n      }, 300);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"focus\", onWindowFocus, false);\n    return () => {\n      window.removeEventListener(\"focus\", onWindowFocus, false);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputRef, isFileDialogActive, onFileDialogCancelCb, fsAccessApiWorksRef]);\n\n  const dragTargetsRef = useRef<EventTarget[]>([]);\n  const onDocumentDrop = (event: DropEvent) => {\n    if (rootRef.current?.contains(event.target as Node)) {\n      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\n      return;\n    }\n    event.preventDefault();\n    dragTargetsRef.current = [];\n  };\n\n  useEffect(() => {\n    if (preventDropOnDocument) {\n      document.addEventListener(\"dragover\", onDocumentDragOver, false);\n      document.addEventListener(\"drop\", onDocumentDrop, false);\n    }\n\n    return () => {\n      if (preventDropOnDocument) {\n        document.removeEventListener(\"dragover\", onDocumentDragOver);\n        document.removeEventListener(\"drop\", onDocumentDrop);\n      }\n    };\n  }, [rootRef, preventDropOnDocument]);\n\n  // Auto focus the root when autoFocus is true\n  useEffect(() => {\n    if (!disabled && autoFocus && rootRef.current) {\n      rootRef.current.focus();\n    }\n    return noop;\n  }, [rootRef, autoFocus, disabled]);\n\n  const onErrCb = useCallback(\n    (e: Error) => {\n      if (onError) {\n        onError(e);\n      } else {\n        // Let the user know something's gone wrong if they haven't provided the onError cb.\n        console.error(e);\n      }\n    },\n    [onError],\n  );\n\n  const onDragEnterCb = useCallback(\n    (event: React.DragEvent<HTMLElement>) => {\n      event.preventDefault();\n      // Persist here because we need the event later after getFilesFromEvent() is done\n      event.persist();\n      stopPropagation(event);\n\n      dragTargetsRef.current = [...dragTargetsRef.current, event.target];\n\n      if (isEvtWithFiles(event)) {\n        Promise.resolve(getFilesFromEvent(event))\n          .then((files) => {\n            if (isPropagationStopped(event) && !noDragEventsBubbling) {\n              return;\n            }\n\n            const fileCount = files.length;\n            const isDragAccept =\n              fileCount > 0 &&\n              allFilesAccepted({\n                files: files as File[],\n                accept: acceptAttr!,\n                minSize,\n                maxSize,\n                multiple,\n                maxFiles,\n                validator: validator!,\n              });\n            const isDragReject = fileCount > 0 && !isDragAccept;\n\n            dispatch({\n              type: \"setDraggedFiles\",\n              payload: {\n                isDragAccept,\n                isDragReject,\n                isDragActive: true,\n              },\n            });\n\n            if (onDragEnter) {\n              onDragEnter(event);\n            }\n          })\n          .catch(onErrCb);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      getFilesFromEvent,\n      onDragEnter,\n      onErrCb,\n      noDragEventsBubbling,\n      acceptAttr,\n      minSize,\n      maxSize,\n      multiple,\n      maxFiles,\n      validator,\n    ],\n  );\n\n  const onDragOverCb = useCallback(\n    (event: React.DragEvent<HTMLElement>) => {\n      event.preventDefault();\n\n      event.persist();\n      stopPropagation(event);\n\n      const hasFiles = isEvtWithFiles(event);\n      if (hasFiles && \"dataTransfer\" in event && event.dataTransfer !== null) {\n        try {\n          event.dataTransfer.dropEffect = \"copy\";\n        } catch { } /* eslint-disable-line no-empty */\n      }\n\n      if (hasFiles && onDragOver) {\n        onDragOver(event);\n      }\n\n      return false;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [onDragOver, noDragEventsBubbling],\n  );\n\n  const onDragLeaveCb = useCallback(\n    (event: React.DragEvent<HTMLElement>) => {\n      event.preventDefault();\n      event.persist();\n      stopPropagation(event);\n\n      // Only deactivate once the dropzone and all children have been left\n      const targets = dragTargetsRef.current.filter((target) =>\n        rootRef.current?.contains(target as Node),\n      );\n      // Make sure to remove a target present multiple times only once\n      // (Firefox may fire dragenter/dragleave multiple times on the same element)\n      const targetIdx = targets.indexOf(event.target);\n      if (targetIdx !== -1) {\n        targets.splice(targetIdx, 1);\n      }\n      dragTargetsRef.current = targets;\n      if (targets.length > 0) {\n        return;\n      }\n\n      dispatch({\n        type: \"setDraggedFiles\",\n        payload: {\n          isDragActive: false,\n          isDragAccept: false,\n          isDragReject: false,\n        },\n      });\n\n      if (isEvtWithFiles(event) && onDragLeave) {\n        onDragLeave(event);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [rootRef, onDragLeave, noDragEventsBubbling],\n  );\n\n  const setFiles = useCallback(\n    (files: File[], event: DropEvent | null) => {\n      const acceptedFiles: File[] = [];\n      const fileRejections: FileRejection[] = [];\n\n      files.forEach((file) => {\n        const [accepted, acceptError] = fileAccepted(file, acceptAttr!);\n        const [sizeMatch, sizeError] = fileMatchSize(file, minSize, maxSize);\n        const customErrors = validator ? validator(file) : null;\n\n        if (accepted && sizeMatch && !customErrors) {\n          acceptedFiles.push(file);\n        } else {\n          let errors: (FileError | null | boolean)[] = [acceptError, sizeError];\n\n          if (customErrors) {\n            errors = errors.concat(customErrors);\n          }\n\n          fileRejections.push({\n            file,\n            errors: errors.filter((e): e is FileError => !!e),\n          });\n        }\n      });\n\n      if (\n        (!multiple && acceptedFiles.length > 1) ||\n        (multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles)\n      ) {\n        // Reject everything and empty accepted files\n        acceptedFiles.forEach((file) => {\n          fileRejections.push({\n            file,\n            errors: [\n              { code: ErrorCode.TOO_MANY_FILES, message: \"Too many files\" },\n            ],\n          });\n        });\n        acceptedFiles.splice(0);\n      }\n\n      dispatch({\n        type: \"setFiles\",\n        payload: {\n          acceptedFiles,\n          fileRejections,\n        },\n      });\n\n      if (onDrop) {\n        onDrop(acceptedFiles, fileRejections, event!);\n      }\n\n      if (fileRejections.length > 0 && onDropRejected) {\n        onDropRejected(fileRejections, event!);\n      }\n\n      if (acceptedFiles.length > 0 && onDropAccepted) {\n        onDropAccepted(acceptedFiles, event!);\n      }\n    },\n    [\n      dispatch,\n      multiple,\n      acceptAttr,\n      minSize,\n      maxSize,\n      maxFiles,\n      onDrop,\n      onDropAccepted,\n      onDropRejected,\n      validator,\n    ],\n  );\n\n  const onDropCb = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault();\n      // Persist here because we need the event later after getFilesFromEvent() is done\n      event.persist();\n      stopPropagation(event);\n\n      dragTargetsRef.current = [];\n\n      if (isEvtWithFiles(event)) {\n        Promise.resolve(getFilesFromEvent(event))\n          .then((files) => {\n            if (isPropagationStopped(event) && !noDragEventsBubbling) {\n              return;\n            }\n            setFiles(files as File[], event);\n          })\n          .catch(onErrCb);\n      }\n      dispatch({ type: \"reset\" });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [getFilesFromEvent, setFiles, onErrCb, noDragEventsBubbling],\n  );\n\n  // Fn for opening the file dialog programmatically\n  const openFileDialog = useCallback(() => {\n    // No point to use FS access APIs if context is not secure\n    // https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts#feature_detection\n    if (fsAccessApiWorksRef.current) {\n      dispatch({ type: \"openDialog\" });\n      onFileDialogOpenCb();\n      // https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker\n      const opts = {\n        multiple,\n        types: pickerTypes,\n      };\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      (window as any)\n        .showOpenFilePicker(opts)\n        .then((handles: DropEvent) => getFilesFromEvent(handles))\n        .then((files: File[]) => {\n          setFiles(files, null);\n          dispatch({ type: \"closeDialog\" });\n        })\n        .catch((e: Error) => {\n          // AbortError means the user canceled\n          if (isAbort(e)) {\n            onFileDialogCancelCb();\n            dispatch({ type: \"closeDialog\" });\n          } else if (isSecurityError(e)) {\n            fsAccessApiWorksRef.current = false;\n            // CORS, so cannot use this API\n            // Try using the input\n            if (inputRef.current) {\n              inputRef.current.value = \"\";\n              inputRef.current.click();\n            } else {\n              onErrCb(\n                new Error(\n                  \"Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided.\",\n                ),\n              );\n            }\n          } else {\n            onErrCb(e);\n          }\n        });\n      return;\n    }\n\n    if (inputRef.current) {\n      dispatch({ type: \"openDialog\" });\n      onFileDialogOpenCb();\n      inputRef.current.value = \"\";\n      inputRef.current.click();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    dispatch,\n    onFileDialogOpenCb,\n    onFileDialogCancelCb,\n    useFsAccessApi,\n    setFiles,\n    onErrCb,\n    pickerTypes,\n    multiple,\n  ]);\n\n  // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\n  const onKeyDownCb = useCallback(\n    (event: React.KeyboardEvent) => {\n      // Ignore keyboard events bubbling up the DOM tree\n      if (!rootRef.current?.isEqualNode(event.target as Node)) {\n        return;\n      }\n\n      if (\n        (\"key\" in event && (event.key === \" \" || event.key === \"Enter\")) ||\n        (\"keyCode\" in event && (event.keyCode === 32 || event.keyCode === 13))\n      ) {\n        event.preventDefault();\n        openFileDialog();\n      }\n    },\n    [rootRef, openFileDialog],\n  );\n\n  // Update focus state for the dropzone\n  const onFocusCb = useCallback(() => {\n    dispatch({ type: \"focus\" });\n  }, []);\n  const onBlurCb = useCallback(() => {\n    dispatch({ type: \"blur\" });\n  }, []);\n\n  // Cb to open the file dialog when click occurs on the dropzone\n  const onClickCb = useCallback(() => {\n    if (noClick) {\n      return;\n    }\n\n    // In IE11/Edge the file-browser dialog is blocking, therefore, use setTimeout()\n    // to ensure React can handle state changes\n    // See: https://github.com/react-dropzone/react-dropzone/issues/450\n    if (isIeOrEdge()) {\n      setTimeout(openFileDialog, 0);\n    } else {\n      openFileDialog();\n    }\n  }, [noClick, openFileDialog]);\n\n  const composeHandler = (fn: (...args: any[]) => any) => {\n    return disabled ? null : fn;\n  };\n\n  const composeKeyboardHandler = (fn: (...args: any[]) => any) => {\n    return noKeyboard ? null : composeHandler(fn);\n  };\n\n  const composeDragHandler = (fn: (...args: any[]) => any) => {\n    return noDrag ? null : composeHandler(fn);\n  };\n\n  const stopPropagation = (event: DropEvent) => {\n    if (noDragEventsBubbling) {\n      event.stopPropagation();\n    }\n  };\n\n  interface DropzoneRootProps extends React.HTMLAttributes<HTMLElement> {\n    refKey?: string;\n    [key: string]: any;\n  }\n  // @ts-expect-error: FIXME LATER\n  const getRootProps: <T extends DropzoneRootProps>(props?: T) => T = useMemo(\n    () =>\n      // @ts-expect-error - FIXME LATER\n      ({\n        refKey = \"ref\",\n        role,\n        onKeyDown,\n        onFocus,\n        onBlur,\n        onClick,\n        onDragEnter,\n        onDragOver,\n        onDragLeave,\n        onDrop,\n        ...rest\n      } = {}) => ({\n        onKeyDown: composeKeyboardHandler(\n          composeEventHandlers(onKeyDown, onKeyDownCb),\n        ),\n        onFocus: composeKeyboardHandler(\n          composeEventHandlers(onFocus, onFocusCb),\n        ),\n        onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),\n        onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),\n        onDragEnter: composeDragHandler(\n          composeEventHandlers(onDragEnter, onDragEnterCb),\n        ),\n        onDragOver: composeDragHandler(\n          composeEventHandlers(onDragOver, onDragOverCb),\n        ),\n        onDragLeave: composeDragHandler(\n          composeEventHandlers(onDragLeave, onDragLeaveCb),\n        ),\n        onDrop: composeDragHandler(composeEventHandlers(onDrop, onDropCb)),\n        role: typeof role === \"string\" && role !== \"\" ? role : \"presentation\",\n        [refKey]: rootRef,\n        ...(!disabled && !noKeyboard ? { tabIndex: 0 } : {}),\n        ...rest,\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      rootRef,\n      onKeyDownCb,\n      onFocusCb,\n      onBlurCb,\n      onClickCb,\n      onDragEnterCb,\n      onDragOverCb,\n      onDragLeaveCb,\n      onDropCb,\n      noKeyboard,\n      noDrag,\n      disabled,\n    ],\n  );\n\n  const onInputElementClick = useCallback((event: React.MouseEvent) => {\n    event.stopPropagation();\n  }, []);\n\n  interface DropzoneInputProps\n    extends React.InputHTMLAttributes<HTMLInputElement> {\n    refKey?: string;\n  }\n  // @ts-expect-error - FIXME LATER\n  const getInputProps: <T extends DropzoneInputProps>(props?: T) => T = useMemo(\n    () =>\n      // @ts-expect-error - FIXME LATER\n      ({ refKey = \"ref\", onChange, onClick, ...rest } = {}) => ({\n        accept: acceptAttr,\n        multiple,\n        type: \"file\",\n        style: { display: \"none\" },\n        onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),\n        onClick: composeHandler(\n          composeEventHandlers(onClick, onInputElementClick),\n        ),\n        tabIndex: -1,\n        [refKey]: inputRef,\n        ...rest,\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [inputRef, accept, multiple, onDropCb, disabled],\n  );\n\n  const returnResult = useMemo(\n    () => ({\n      ...state,\n      isFocused: isFocused && !disabled,\n      getRootProps,\n      getInputProps,\n      rootRef,\n      inputRef,\n      open: composeHandler(openFileDialog),\n    }),\n    [\n      isFocused,\n      disabled,\n      getRootProps,\n      getInputProps,\n      rootRef,\n      inputRef,\n      composeHandler(openFileDialog),\n      state,\n    ]\n  )\n\n  return returnResult;\n}\n\ntype Focus = { type: \"focus\" };\ntype Blur = { type: \"blur\" };\ntype OpenDialog = { type: \"openDialog\" };\ntype CloseDialog = { type: \"closeDialog\" };\ntype SetDraggedFiles = {\n  type: \"setDraggedFiles\";\n  payload: Pick<\n    DropzoneState,\n    \"isDragActive\" | \"isDragAccept\" | \"isDragReject\"\n  >;\n};\ntype SetFiles = {\n  type: \"setFiles\";\n  payload: Pick<DropzoneState, \"acceptedFiles\" | \"fileRejections\">;\n};\ntype Reset = { type: \"reset\" };\ntype DropzoneActions =\n  | Focus\n  | Blur\n  | OpenDialog\n  | CloseDialog\n  | SetDraggedFiles\n  | SetFiles\n  | Reset;\nfunction reducer(state: DropzoneState, action: DropzoneActions): DropzoneState {\n  switch (action.type) {\n    case \"focus\":\n      return {\n        ...state,\n        isFocused: true,\n      };\n    case \"blur\":\n      return {\n        ...state,\n        isFocused: false,\n      };\n    case \"openDialog\":\n      return {\n        ...initialState,\n        isFileDialogActive: true,\n      };\n    case \"closeDialog\":\n      return {\n        ...state,\n        isFileDialogActive: false,\n      };\n    case \"setDraggedFiles\":\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case \"setFiles\":\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case \"reset\":\n      return {\n        ...initialState,\n      };\n    default:\n      return state;\n  }\n}\n\nfunction noop() {\n  // noop\n}\n\nexport { ErrorCode } from \"./utils\";\n","import attrAccepts from \"attr-accept\";\n\nimport type { AcceptProp, DropEvent, FileError } from \"./types\";\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\nconst accepts: typeof attrAccepts =\n  // @ts-expect-error - ESM interop\n  typeof attrAccepts === \"function\" ? attrAccepts : attrAccepts.default;\n\nexport const ErrorCode = {\n  FILE_INVALID_TYPE: \"FILE_INVALID_TYPE\",\n  FILE_TOO_LARGE: \"FILE_TOO_LARGE\",\n  FILE_TOO_SMALL: \"FILE_TOO_SMALL\",\n  TOO_MANY_FILES: \"TOO_MANY_FILES\",\n} as const;\nexport type ErrorCode = (typeof ErrorCode)[keyof typeof ErrorCode];\n\nexport const getInvalidTypeRejectionErr = (accept: string | string[]) => {\n  accept = Array.isArray(accept) && accept.length === 1 ? accept[0] : accept;\n  const messageSuffix = Array.isArray(accept)\n    ? `one of ${accept.join(\", \")}`\n    : accept;\n  return {\n    code: ErrorCode.FILE_INVALID_TYPE,\n    message: `File type must be ${messageSuffix}`,\n  };\n};\n\nexport const getTooLargeRejectionErr = (maxSize: number) => {\n  return {\n    code: ErrorCode.FILE_TOO_LARGE,\n    message: `File is larger than ${maxSize} ${\n      maxSize === 1 ? \"byte\" : \"bytes\"\n    }`,\n  };\n};\n\nexport const getTooSmallRejectionErr = (minSize: number) => {\n  return {\n    code: ErrorCode.FILE_TOO_SMALL,\n    message: `File is smaller than ${minSize} ${\n      minSize === 1 ? \"byte\" : \"bytes\"\n    }`,\n  };\n};\n\n// Firefox versions prior to 53 return a bogus MIME type for every file drag, so dragovers with\n// that MIME type will always be accepted\nexport function fileAccepted(file: File, accept: string | string[]) {\n  const isAcceptable =\n    file.type === \"application/x-moz-file\" || accepts(file, accept);\n  return [\n    isAcceptable,\n    isAcceptable ? null : getInvalidTypeRejectionErr(accept),\n  ];\n}\n\nexport function fileMatchSize(file: File, minSize: number, maxSize: number) {\n  if (isDefined(file.size)) {\n    if (isDefined(minSize) && isDefined(maxSize)) {\n      if (file.size > maxSize) return [false, getTooLargeRejectionErr(maxSize)];\n      if (file.size < minSize) return [false, getTooSmallRejectionErr(minSize)];\n    } else if (isDefined(minSize) && file.size < minSize)\n      return [false, getTooSmallRejectionErr(minSize)];\n    else if (isDefined(maxSize) && file.size > maxSize)\n      return [false, getTooLargeRejectionErr(maxSize)];\n  }\n  return [true, null];\n}\n\nfunction isDefined<T>(value: T | null | undefined): value is T {\n  return value !== undefined && value !== null;\n}\n\nexport function allFilesAccepted({\n  files,\n  accept,\n  minSize,\n  maxSize,\n  multiple,\n  maxFiles,\n  validator,\n}: {\n  files: File[];\n  accept: string | string[];\n  minSize: number;\n  maxSize: number;\n  multiple: boolean;\n  maxFiles: number;\n  validator: (f: File) => FileError | FileError[] | null;\n}) {\n  if (\n    (!multiple && files.length > 1) ||\n    (multiple && maxFiles >= 1 && files.length > maxFiles)\n  ) {\n    return false;\n  }\n\n  return files.every((file) => {\n    const [accepted] = fileAccepted(file, accept);\n    const [sizeMatch] = fileMatchSize(file, minSize, maxSize);\n    const customErrors = validator ? validator(file) : null;\n    return accepted && sizeMatch && !customErrors;\n  });\n}\n\n// React's synthetic events has event.isPropagationStopped,\n// but to remain compatibility with other libs (Preact) fall back\n// to check event.cancelBubble\nexport function isPropagationStopped(event: DropEvent) {\n  if (\n    \"isPropagationStopped\" in event &&\n    typeof event.isPropagationStopped === \"function\"\n  ) {\n    return event.isPropagationStopped();\n  } else if (\n    \"cancelBubble\" in event &&\n    typeof event.cancelBubble !== \"undefined\"\n  ) {\n    return event.cancelBubble;\n  }\n  return false;\n}\n\nexport function isEvtWithFiles(event: DropEvent) {\n  if (!(\"dataTransfer\" in event && event.dataTransfer !== null)) {\n    return !!event.target && \"files\" in event.target && !!event.target.files;\n  }\n  // https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#file\n  return Array.prototype.some.call(\n    event.dataTransfer.types,\n    (type) => type === \"Files\" || type === \"application/x-moz-file\",\n  );\n}\n\nexport function isKindFile<T>(item: T) {\n  return (\n    typeof item === \"object\" &&\n    item !== null &&\n    \"kind\" in item &&\n    item.kind === \"file\"\n  );\n}\n\n// allow the entire document to be a drag target\nexport function onDocumentDragOver(event: DragEvent) {\n  event.preventDefault();\n}\n\nfunction isIe(userAgent: string) {\n  return (\n    userAgent.indexOf(\"MSIE\") !== -1 || userAgent.indexOf(\"Trident/\") !== -1\n  );\n}\n\nfunction isEdge(userAgent: string) {\n  return userAgent.indexOf(\"Edge/\") !== -1;\n}\n\nexport function isIeOrEdge(userAgent = window.navigator.userAgent) {\n  return isIe(userAgent) || isEdge(userAgent);\n}\n\n/**\n * This is intended to be used to compose event handlers\n * They are executed in order until one of them calls `event.isPropagationStopped()`.\n * Note that the check is done on the first invoke too,\n * meaning that if propagation was stopped before invoking the fns,\n * no handlers will be executed.\n *\n * @param {Function} fns the event hanlder functions\n * @return {Function} the event handler to add to an element\n */\nexport function composeEventHandlers(\n  ...fns: (((...args: any[]) => any) | undefined)[]\n) {\n  return (event: DropEvent, ...args: any[]) =>\n    fns.some((fn) => {\n      if (!isPropagationStopped(event) && fn) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        fn(event, ...args);\n      }\n      return isPropagationStopped(event);\n    });\n}\n\n/**\n * canUseFileSystemAccessAPI checks if the [File System Access API](https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API)\n * is supported by the browser.\n * @returns {boolean}\n */\nexport function canUseFileSystemAccessAPI() {\n  return \"showOpenFilePicker\" in window;\n}\n\n/**\n * Convert the `{accept}` dropzone prop to the\n * `{types}` option for https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker\n *\n * @param {AcceptProp} accept\n * @returns {{accept: string[]}[]}\n */\nexport function pickerOptionsFromAccept(accept?: AcceptProp) {\n  if (isDefined(accept)) {\n    const acceptForPicker = Object.entries(accept)\n      .filter(([mimeType, ext]) => {\n        let ok = true;\n\n        if (!isMIMEType(mimeType)) {\n          console.warn(\n            `Skipped \"${mimeType}\" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.`,\n          );\n          ok = false;\n        }\n\n        if (!Array.isArray(ext) || !ext.every(isExt)) {\n          console.warn(\n            `Skipped \"${mimeType}\" because an invalid file extension was provided.`,\n          );\n          ok = false;\n        }\n\n        return ok;\n      })\n      .reduce(\n        (agg, [mimeType, ext]) => ({\n          ...agg,\n          [mimeType]: ext,\n        }),\n        {},\n      );\n    return [\n      {\n        // description is required due to https://crbug.com/1264708\n        description: \"Files\",\n        accept: acceptForPicker,\n      },\n    ];\n  }\n  return accept;\n}\n\n/**\n * Convert the `{accept}` dropzone prop to an array of MIME types/extensions.\n * @param {AcceptProp} accept\n * @returns {string}\n */\nexport function acceptPropAsAcceptAttr(accept?: AcceptProp) {\n  if (isDefined(accept)) {\n    return (\n      Object.entries(accept)\n        .reduce<string[]>((a, [mimeType, ext]) => [...a, mimeType, ...ext], [])\n        // Silently discard invalid entries as pickerOptionsFromAccept warns about these\n        .filter((v) => isMIMEType(v) || isExt(v))\n        .join(\",\")\n    );\n  }\n\n  return undefined;\n}\n\n/**\n * Check if v is an exception caused by aborting a request (e.g window.showOpenFilePicker()).\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/DOMException.\n */\nexport function isAbort(v: any) {\n  return (\n    v instanceof DOMException &&\n    (v.name === \"AbortError\" || v.code === v.ABORT_ERR)\n  );\n}\n\n/**\n * Check if v is a security error.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/DOMException.\n */\nexport function isSecurityError(v: any) {\n  return (\n    v instanceof DOMException &&\n    (v.name === \"SecurityError\" || v.code === v.SECURITY_ERR)\n  );\n}\n\n/**\n * Check if v is a MIME type string.\n *\n * See accepted format: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#unique_file_type_specifiers.\n */\nexport function isMIMEType(v: string) {\n  return (\n    v === \"audio/*\" ||\n    v === \"video/*\" ||\n    v === \"image/*\" ||\n    v === \"text/*\" ||\n    /\\w+\\/[-+.\\w]+/g.test(v)\n  );\n}\n\n/**\n * Check if v is a file extension.\n */\nexport function isExt(v: string) {\n  return /^.*\\.[\\w]+$/.test(v);\n}\n"],"mappings":"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","names":["import_react","attrAccepts","onDragEnter","onDragOver","onDragLeave","onDrop"]}